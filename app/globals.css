@tailwind base;
@tailwind components;
@tailwind utilities;

/* ---------- Base color vars (kept minimal; Tailwind handles most theming) ---------- */
:root {
  --background: #ffffff;
  --foreground: #171717;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

/* Apply system foreground/background only if you actually use these vars */
body {
  background: var(--background);
  color: var(--foreground);
}

/* ---------- A11y focus ring helpers (optional, keep if you already use them) ---------- */
:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

/* ---------- Print helpers (kept very light) ---------- */
@media print {
  /* Ensure animated elements don’t hide in print */
  .fade-in { animation: none !important; }
}

/* =======================================================================================
   Safe fade-in animation (JS-gated)
   ---------------------------------------------------------------------------------------
   - Content is VISIBLE by default (no opacity:0 flash).
   - Only animates once <html> has .js class, which your root layout adds before hydration.
   - Respects prefers-reduced-motion.
   - If JS fails or is disabled, content stays visible (no animation).
   ======================================================================================= */

@keyframes fadeIn {
  from { opacity: 0; }
  to   { opacity: 1; }
}

/* Visible baseline — do NOT hide by default */
.fade-in {}

/* Animate only after JS sets the .js flag on <html> */
html.js .fade-in {
  animation: fadeIn 0.6s ease-out both;
  will-change: opacity;
}

/* No-JS / early render fallback: keep content visible */
html:not(.js) .fade-in { animation: none !important; }

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce) {
  .fade-in { animation: none !important; }
}
